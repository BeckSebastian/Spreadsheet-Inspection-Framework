<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="dynamicPolicy" type="dynamicPolicy"/>

  <xs:element name="policy" type="policy"/>

  <xs:complexType name="policy">
    <xs:sequence>
      <xs:element name="rules" type="dynamicPolicyRuleListWrapper" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="description" type="xs:string"/>
    <xs:attribute name="author" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="dynamicPolicyRuleListWrapper">
    <xs:sequence>
      <xs:element name="rule" type="rule" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="rule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="invariants" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="compare" type="binaryCondition"/>
                  <xs:element name="interval" type="ternaryCondition"/>
                  <xs:element name="count" type="elementCountCondition"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="testInputs" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="testInput" type="testInput" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="postconditions" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="compare" type="binaryCondition"/>
                  <xs:element name="interval" type="ternaryCondition"/>
                  <xs:element name="count" type="elementCountCondition"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="monolithicPolicyRule" abstract="true">
    <xs:complexContent>
      <xs:extension base="abstractPolicyRule">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="abstractPolicyRule" abstract="true">
    <xs:sequence/>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="author" type="xs:string"/>
    <xs:attribute name="severityWeight" type="xs:double"/>
  </xs:complexType>

  <xs:complexType name="binaryCondition">
    <xs:complexContent>
      <xs:extension base="abstractCondition">
        <xs:sequence>
          <xs:element name="relation" type="eBinaryRelation" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="abstractCondition" abstract="true">
    <xs:sequence>
      <xs:element name="elementType" type="xs:string" minOccurs="0"/>
      <xs:element name="property" type="xs:string" minOccurs="0"/>
      <xs:element name="target" type="xs:string" minOccurs="0"/>
      <xs:element name="value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ternaryCondition">
    <xs:complexContent>
      <xs:extension base="abstractCondition">
        <xs:sequence>
          <xs:element name="value2" type="xs:double" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="relation" type="eTernaryRelation"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="elementCountCondition">
    <xs:complexContent>
      <xs:extension base="abstractCondition">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="testInput">
    <xs:sequence>
      <xs:element name="target" type="xs:string" minOccurs="0"/>
      <xs:element name="type" type="cellContentType" minOccurs="0"/>
      <xs:element name="value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="formulaComplexityPolicyRule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="maxNestingLevel" type="xs:int" minOccurs="0"/>
          <xs:element name="maxNumberOfOperations" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="noConstantsInFormulasPolicyRule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="ignoredConstants" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="ignoredFunctions" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="ignoredCells" type="cell" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="cell">
    <xs:complexContent>
      <xs:extension base="basicAbstractElement">
        <xs:sequence>
          <xs:element name="booleanContent" type="xs:boolean" minOccurs="0"/>
          <xs:element name="columnIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="errorContent" type="xs:string" minOccurs="0"/>
          <xs:element name="formula" type="formula" minOccurs="0"/>
          <xs:element name="numericContent" type="xs:double" minOccurs="0"/>
          <xs:element name="rowIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="textContent" type="xs:string" minOccurs="0"/>
          <xs:element name="worksheet" type="worksheet" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="basicAbstractElement" abstract="true">
    <xs:complexContent>
      <xs:extension base="abstractElement">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="abstractElement" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="formula">
    <xs:complexContent>
      <xs:extension base="basicAbstractElement">
        <xs:sequence>
          <xs:element name="cell" type="cell" minOccurs="0"/>
          <xs:element name="resultType" type="cellContentType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="worksheet">
    <xs:complexContent>
      <xs:extension base="basicAbstractElement">
        <xs:sequence>
          <xs:element name="hidden" type="xs:boolean" minOccurs="0"/>
          <xs:element name="index" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="spreadsheet" type="spreadsheet" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="spreadsheet">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="properties" type="spreadsheetProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="spreadsheetProperties">
    <xs:complexContent>
      <xs:extension base="basicAbstractElement">
        <xs:sequence>
          <xs:element name="author" type="xs:string" minOccurs="0"/>
          <xs:element name="category" type="xs:string" minOccurs="0"/>
          <xs:element name="comments" type="xs:string" minOccurs="0"/>
          <xs:element name="creationDate" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="keywords" type="xs:string" minOccurs="0"/>
          <xs:element name="revision" type="xs:string" minOccurs="0"/>
          <xs:element name="subject" type="xs:string" minOccurs="0"/>
          <xs:element name="title" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="readingDirectionPolicyRule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="mustBeLeftToRightReadable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="mustBeTopToBottomReadable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="ignoredCells" type="cell" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dynamicPolicy">
    <xs:complexContent>
      <xs:extension base="policy">
        <xs:sequence>
          <xs:element name="inputCells" type="inputCell" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="outputCells" type="outputCell" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="spreadsheetFileName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="inputCell">
    <xs:complexContent>
      <xs:extension base="customAbstractElement">
        <xs:sequence>
          <xs:element name="cell" type="cell" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="customAbstractElement" abstract="true">
    <xs:complexContent>
      <xs:extension base="abstractElement">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="outputCell">
    <xs:complexContent>
      <xs:extension base="customAbstractElement">
        <xs:sequence>
          <xs:element name="cell" type="cell" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="GeneralDynamicRule">
    <xs:complexContent>
      <xs:extension base="rule">
        <xs:sequence>
          <xs:element name="targetElementProperties">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="key" minOccurs="0" type="xs:string"/>
                      <xs:element name="value" minOccurs="0" type="xs:string"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="targetElementType" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="targetedDynamicRule">
    <xs:complexContent>
      <xs:extension base="rule">
        <xs:sequence/>
        <xs:attribute name="target" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="eBinaryRelation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="equal"/>
      <xs:enumeration value="greaterThan"/>
      <xs:enumeration value="lessThan"/>
      <xs:enumeration value="lessOrEqual"/>
      <xs:enumeration value="greaterOrEqual"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="eTernaryRelation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="closed"/>
      <xs:enumeration value="open"/>
      <xs:enumeration value="openLeft"/>
      <xs:enumeration value="openRight"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="cellContentType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="BLANK"/>
      <xs:enumeration value="BOOLEAN"/>
      <xs:enumeration value="TEXT"/>
      <xs:enumeration value="NUMERIC"/>
      <xs:enumeration value="ERROR"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>

